[tox]
envlist =
    {py39, py38}-{sdist, wheel}-test
    build
isolated_build = true
skip_missing_interpreters = true
minversion = 3.14
requires = virtualenv >= 20.0.34


[testenv]
description = Test environment for running tests
    PYTEST_*
setenv =
# It will overide variables in passenv in case of collision
    DIST_DIR = dist
    PY_PACKAGE = adam_sandler
    PKG_VERSION = 0.1.0
    black,lint,isort: LINT_ARGS = "tests src"
extras =
# This is where dependencies are defined
    test
commands =
    pytest -vs \
      {posargs:{toxinidir}{/}tests}


[testenv:{py39, py38}-sdist-test]
description = Install as source distribution & test
skip_install = true
changedir = {toxinidir}
commands_pre =
    python -c 'import os; d = "{env:DIST_DIR}"; import shutil; exec("if os.path.exists(d):\n    shutil.rmtree(d)");'
commands = 
# Generate the sdist, install it, and run tests
    python setup.py sdist --outdir {env:DIST_DIR}
    {[testenv]commands}


[testenv:{py39, py38}-wheel-test]
description = Install as binary wheel distribution & test
skip_install = true
changedir = {toxinidir}
commands_pre =
    python -c 'import os; d = "{env:DIST_DIR}"; import shutil; exec("if os.path.exists(d):\n    shutil.rmtree(d)");'
commands =
# Generate the wheel, install it, and run tests
    pip wheel --wheel-dir {toxworkdir}{/}{env:DIST_DIR} {toxinidir}
    pip install --exists-action w --force-reinstall "{toxworkdir}{/}{env:DIST_DIR}{/}{env:PY_PACKAGE}-{env:PKG_VERSION}-py3-none-any.whl[test]"
    {[testenv]commands}


[testenv:build]
description = Create a source and wheel distribution test
    Creates .tar.gz and .whl files in the {env:DIST_DIR} folder, that can be upload to a pypi index server.
basepython = {env:TOXPYTHON:python3}
deps = build
skip_install = true
changedir = {toxinidir}
commands_pre =
    python -c 'import os; import shutil; d = "{env:DIST_DIR}"; exec("if os.path.exists(d):\n    shutil.rmtree(d)");'
commands = python -m build {toxinidir} --outdir {env:DIST_DIR}
